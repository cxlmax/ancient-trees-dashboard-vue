"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("three");class v{constructor({time:t,geoProjection:s,label3d:d,flyLineLabelGroup:h,depth:m,allFlyLineLabel:u,scale:b},p){this.time=t,this.geoProjection=s,this.label3d=d,this.flyLineLabelGroup=h,this.allFlyLineLabel=u,this.scale=b,this.depth=m,this.instance=new e.Group;const f={middleHeight:15,speed:3,texture:null,radius:.1,segments:32,radialSegments:8,data:[],option:{},material:new e.MeshBasicMaterial({color:16506760,transparent:!0,fog:!1,opacity:1,depthTest:!1,blending:e.AdditiveBlending})};this.options=Object.assign({},f,p),this.init()}init(){const{material:t,option:s,allFlyLine:d,texture:h,segments:m,radius:u,radialSegments:b,data:p,speed:f,middleHeight:L}=this.options,w=(i,y,g)=>{let r=s.format;try{const l=s.format.match(/\{(.*?)}/g);if(l)for(let o=0;o<l.length;o++)r=r.replaceAll(l[o],i[l[o].slice(1,-1)])}catch{}const n=this.label3d.create("","flyline-label flyline-"+s.id,!0);return n.init('<div class="wrap"><span class="label">'+r+"</span></div>",g),this.label3d.setLabelStyle(n,.08/this.scale,"x"),n.name="flyline-"+s.id,n.setParent(this.flyLineLabelGroup),n};p.map(i=>{const[y,g]=this.geoProjection(i.coords[0]),r=new e.Vector3(y,-g,0),[n,l]=this.geoProjection(i.coords[1]),o=new e.Vector3(n,-l,0),c=new e.Vector3;c.addVectors(r,o).multiplyScalar(.5),c.setZ(L);const V=new e.QuadraticBezierCurve3(r,c,o),x=new e.TubeGeometry(V,m,u,b,!1),a=new e.Mesh(x,t);a.name="flyline-"+s.id,a.position.set(0,0,0),a.renderOrder=21,a.userData.toName=i.toName,a.userData.fromName=i.fromName,a.userData.coords=i.coords,d.push(a);const S=w(i,0,new e.Vector3(c.x,c.y,c.z-s.label.bottom/this.scale));this.allFlyLineLabel.push(S),this.instance.add(a)}),this.time.on("tick",()=>{h.offset.x-=f*.001})}getInstance(){return this.instance}setParent(t){t.add(this.instance)}setVisible(t){this.instance.visible=t,this.run=t}}exports.FlyLine=v;
