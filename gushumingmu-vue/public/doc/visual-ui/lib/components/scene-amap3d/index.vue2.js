"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const o=require("vue"),Q=require("@amap/amap-jsapi-loader"),X=require("axios"),Y=require("nanoid"),w=require("lodash"),ee=require("../../commons/plugins/datasource/index.js"),y=require("../../commons/plugins/event/index.js"),ae=h=>(o.pushScopeId("data-v-49f67c20"),h=h(),o.popScopeId(),h),te=ae(()=>o.createElementVNode("div",{id:"zerov-amap-3d",class:"zerov-amap-container"},null,-1)),se=[te],re=o.defineComponent({name:"zv-scene-amap3d"}),le=o.defineComponent({...re,props:{basicOption:{},sources:{},useEvents:{},uuid:{}},emits:["amap3d-scene-success","amap3d-scene-zoomstart","amap3d-scene-zoomend","amap3d-scene-mapclick","amap3d-scene-dragstart","amap3d-scene-dragging","amap3d-scene-dragend","amap3d-scene-pulseLinkLayer"],setup(h,{expose:E,emit:M}){const r=h,g=M;y.SHJParseEvent.parseEvents(r.useEvents,"on-page-loaded",null);const I=()=>{const n=o.shallowRef(),d=o.shallowRef(),S=o.ref(!1),p=o.ref(),b=o.ref(),k=o.ref(),u=o.ref(),x=a=>{O(),window._AMapSecurityConfig={securityJsCode:a.basic.securityJsCode},Q.load({key:a.basic.key,version:"2.0",Loca:{version:"2.0.0"},plugins:["AMap.ControlBar","AMap.ToolBar","AMap.Scale","AMap.HeatMap","AMap.GeoJSON","AMap.ImageLayer","AMap.TileLayer"]}).then(e=>{u.value=e;const s=new u.value.createDefaultLayer({visible:!0,opacity:1,zIndex:0});n.value=new e.Map("zerov-amap-3d",{rotateEnable:a.config.rotateEnable,pitchEnable:a.config.pitchEnable,resizeEnable:a.config.resizeEnable,zoomEnable:a.config.zoomEnable,dragEnable:a.config.dragEnable,zoom:a.config.zoom,viewMode:"3D",zooms:a.config.zooms,center:a.config.center,mapStyle:a.config.mapStyle,features:a.config.features,pitch:a.config.pitch,rotation:a.config.rotation,wallColor:a.config.floors.wallColor,roofColor:a.config.floors.roofColor,skyColor:a.config.skyColor,layers:[s]}),d.value=new window.Loca.Container({map:n.value}),k.value=new u.value.Scale({visible:a.config.plugin.scale.visible,position:{left:a.config.plugin.scale.position.left+"px",bottom:a.config.plugin.scale.position.bottom+"px"}}),n.value.addControl(k.value),p.value=new e.ControlBar({visible:a.config.plugin.controlBar.visible,showControlButton:a.config.plugin.controlBar.showControlButton,position:{right:a.config.plugin.controlBar.position.right+"px",top:a.config.plugin.controlBar.position.top+"px"}}),n.value.addControl(p.value),b.value=new e.ToolBar({visible:a.config.plugin.toolBar.visible,position:{left:a.config.plugin.toolBar.position.left+"px",top:a.config.plugin.toolBar.position.top+"px"}}),n.value.addControl(b.value),C(e),n.value.on("complete",()=>{setTimeout(()=>{S.value=!0,g("amap3d-scene-success"),y.SHJParseEvent.parseEvents(r.useEvents,"amap3d-scene-success",null)},666)}),n.value.on("zoomstart",()=>{g("amap3d-scene-zoomstart"),y.SHJParseEvent.parseEvents(r.useEvents,"amap3d-scene-zoomstart",null)}),n.value.on("zoomend",()=>{g("amap3d-scene-zoomend"),y.SHJParseEvent.parseEvents(r.useEvents,"amap3d-scene-zoomend",null)}),n.value.on("click",t=>{g("amap3d-scene-mapclick",t.lnglat),y.SHJParseEvent.parseEvents(r.useEvents,"amap3d-scene-mapclick",t.lnglat)}),n.value.on("dragstart",t=>{g("amap3d-scene-dragstart",t.lnglat),y.SHJParseEvent.parseEvents(r.useEvents,"amap3d-scene-dragstart",t.lnglat)}),n.value.on("dragend",t=>{g("amap3d-scene-dragend",t.lnglat),y.SHJParseEvent.parseEvents(r.useEvents,"amap3d-scene-dragend",t.lnglat)})}).catch(e=>{})},C=w.debounce(a=>{r.sources&&r.sources.length>0?ee.SHJDatasourceV2.parse({tId:r.uuid,sources:r.sources,callback:s=>{try{const t=r.basicOption.widgets.find(l=>l._sourceId===s.id);t&&t.type==="heatmap"&&D(window.Loca,t,v(s.data[0].data,"Point")),t&&t.type==="dotlayers"&&T(window.Loca,t,v(s.data[0].data,"Point")),t&&t.type==="scatter"&&F(window.Loca,t,v(s.data[0].data,"Point")),t&&t.type==="labelsLayer"&&N(window.Loca,t,v(s.data[0].data,"Point")),t&&t.type==="signagePoints"&&q(window.Loca,t,v(s.data[0].data,"Point")),t&&t.type==="pulseLinkLayer"&&G(window.Loca,t,v(s.data[0].data,"LineString"))}catch{}r.basicOption.widgets.filter(t=>t.type==="boundary").forEach(t=>{L(a,t)})}}):r.basicOption.widgets.filter(s=>s.type==="boundary").forEach(s=>{L(a,s)});const e=n.value.getLayers();for(let s=0;s<e.length;s++)(e[s].type==="sketchTileLayer"||e[s]._opts.type==="sketchImageLayer")&&n.value.removeLayer(e[s]);r.basicOption.widgets.filter(s=>s.type==="sketchTile").forEach(s=>{const t=$(s);t&&n.value.addLayer(t)}),r.basicOption.widgets.filter(s=>s.type==="sketchImage").forEach(s=>{const t=H(s);n.value.addLayer(t)})},200),_=a=>{const s=a.slice(a.indexOf("(")+1,a.lastIndexOf(")")).split(",").map(l=>l.trim()),t={};for(let l=1;l<s.length;l++){const c=s[l].split(" "),i=c[0],m=parseFloat(c[1])/100,K=Math.round(m*100)/100;t[K]=i}return t},$=a=>{try{return new u.value.TileLayer({bounds:new u.value.Bounds(a.bounds[0],a.bounds[1]),getTileUrl:function(s,t,l){try{return a.url.replace("{z}",l).replace("{x}",s).replace("{y}",t)}catch{}},type:"sketchTileLayer",tileSize:a.tileSize,opacity:a.opacity,zIndex:a.zIndex,zooms:a.zooms})}catch{}return null},H=a=>{try{return new u.value.ImageLayer({bounds:new u.value.Bounds(a.bounds[0],a.bounds[1]),type:"sketchImageLayer",opacity:a.opacity,url:a.url,zIndex:a.zIndex,zooms:a.zooms})}catch{}return null},D=(a,e,s)=>{try{const t=new a.HeatMapLayer({zIndex:10,opacity:e.opacity,visible:!0,zooms:[2,22]}),l=new a.GeoJSONSource({data:s});t.setSource(l,{radius:e.style.radius,unit:e.style.unit,height:e.style.height,opacity:e.style.opacity,gradient:_(e.style.gradient),value:function(c,i){return i.coordinates[2]||0},min:e.style.min,max:e.style.max,heightBezier:[0,.53,.37,.98]}),d.value.add(t)}catch{}},L=async(a,e)=>{try{const s=await X.get(e.geojson);if(s.status===200){const t=new a.GeoJSON({geoJSON:s.data,getPolygon:function(l,c){const i=new a.Polygon({path:c,zIndex:e.zIndex,fillColor:e.style.fillColor,strokeOpacity:e.style.strokeOpacity,fillOpacity:e.style.fillOpacity,strokeColor:e.style.strokeColor,strokeWeight:e.style.strokeWeight,strokeStyle:e.style.strokeStyle});return i.on("mouseover",()=>{i.setOptions({fillOpacity:e.mouseover.fillOpacity,fillColor:e.mouseover.fillColor,strokeOpacity:e.mouseover.strokeOpacity,strokeColor:e.mouseover.strokeColor,strokeStyle:e.mouseover.strokeStyle,strokeWeight:e.mouseover.strokeWeight})}),i.on("mouseout",()=>{i.setOptions({fillColor:e.style.fillColor,strokeOpacity:e.style.strokeOpacity,fillOpacity:e.style.fillOpacity,strokeColor:e.style.strokeColor,strokeWeight:e.style.strokeWeight,strokeStyle:e.style.strokeStyle})}),i}});n.value.add(t)}}catch{}},T=(a,e,s)=>{try{const t=new a.GeoJSONSource({data:s}),l=new a.PointLayer({zIndex:e.zIndex,blend:e.blend,visible:e.visible,opacity:e.opacity}),c={radius:e.style.radius,unit:e.style.unit,color:e.style.color,borderWidth:e.style.borderWidth,blurWidth:e.style.blurWidth,borderColor:e.style.borderColor};l.setSource(t),l.setStyle(c),d.value.add(l),l.addAnimate({key:e.animate.key,value:e.animate.value,duration:e.animate.duration,easing:e.animate.easing,transform:e.animate.transform,random:e.animate.random,delay:e.animate.delay,yoyo:e.animate.yoyo,repeat:e.animate.repeat})}catch{}},F=(a,e,s)=>{try{const t=new a.GeoJSONSource({data:s}),l=new a.ScatterLayer({loca:d.value,zIndex:e.zIndex,opacity:e.opacity,visible:e.visible,zooms:e.zooms});l.setSource(t),l.setStyle({unit:e.style.unit,size:e.style.size,borderWidth:e.style.borderWidth,texture:e.style.texture,duration:e.style.duration,animate:e.style.animate}),d.value.animate.start()}catch{}},N=(a,e,s)=>{try{const t=new a.GeoJSONSource({data:s}),l=new a.LabelsLayer({eventSupport:!0,visible:e.visible,zooms:e.zooms,opacity:e.opacity,collision:e.collision,allowCollision:e.allowCollision,zIndex:e.zIndex});l.setSource(t),l.setStyle({icon:{image:e.icon.image,size:e.icon.size,clipOrigin:e.icon.clipOrigin,offset:e.icon.offset,anchor:e.icon.anchor},text:{content:(c,i)=>i.properties[e.text.content],zooms:e.text.zooms,offset:e.text.offset,direction:e.text.direction,style:{fontSize:e.text.style.fontSize,fillColor:e.text.style.fillColor,strokeColor:e.text.style.strokeColor,strokeWidth:e.text.style.strokeWidth,padding:e.text.style.padding,backgroundColor:e.text.style.backgroundColor,borderColor:e.text.style.borderColor,borderWidth:e.text.style.borderWidth,fold:e.text.style.fold,fontWeight:e.text.style.fontWeight}}}),l.on("complete",()=>{const c=l.getLabelsLayer().getAllOverlays();for(const i of c)i.on("click",m=>{}),i.on("mouseover",m=>{}),i.on("mouseout",m=>{})}),d.value.add(l)}catch{}},q=(a,e,s)=>{try{const t=new a.GeoJSONSource({data:s}),l=new a.ZMarkerLayer({zIndex:e.signs.zIndex,visible:e.signs.visible,zooms:e.signs.zooms,opacity:e.signs.opacity,depth:!1});l.setSource(t),l.setStyle({content:(i,m)=>`<div style="
                                width: ${e.signs.style.width}px; 
                                height: ${e.signs.style.height+148}px;
                            ">
                            <p style="
                                display: block;
                                height:${e.signs.style.height}px;
                                background-image:${e.signs.style.background};
                                border:${e.signs.style.borderWidth}px ${e.signs.style.borderStyle} ${e.signs.style.borderColor};
                                border-radius: ${e.signs.style.borderRadius}px;
                                line-height:${e.signs.style.lineHeight}px;
                                text-align:${e.signs.style.textAlign};
                                font-size:${e.signs.style.fontSize}px;
                                color:${e.signs.style.fillColor};
                                margin:0;
                            ">
                                ${m.properties.name}
                            </p>
                        </div>`,unit:e.signs.style.unit,rotation:e.signs.style.rotation,alwaysFront:e.signs.style.alwaysFront,size:[e.signs.style.width,e.signs.style.height+148],altitude:e.signs.style.altitude}),d.value.add(l);const c=new a.ZMarkerLayer({zIndex:e.landmark.zIndex,visible:e.landmark.visible,zooms:e.landmark.zooms,opacity:e.landmark.opacity,depth:!1});c.setSource(t),c.setStyle({content:(i,m)=>`<div style="
                            width: ${e.landmark.style.size[0]}px;
                            height: ${e.landmark.style.size[1]}px;
                            background: url(${e.landmark.style.image});
                            background-size:contain;
                        ">
                        </div>`,unit:e.landmark.style.unit,rotation:e.landmark.style.rotation,alwaysFront:e.landmark.style.alwaysFront,size:e.landmark.style.size,altitude:e.landmark.style.altitude}),c.addAnimate({key:"altitude",value:[0,1],random:e.landmark.animate.random,duration:e.landmark.animate.duration,transform:e.landmark.animate.transform,delay:e.landmark.animate.delay,yoyo:e.landmark.animate.yoyo,repeat:e.landmark.animate.repeat}),d.value.add(c),d.value.animate.start()}catch{}},G=(a,e,s)=>{const t=new a.PulseLinkLayer({zIndex:e.zIndex,opacity:e.opacity,visible:e.visible,zooms:e.zooms,depth:e.depth}),l=new a.GeoJSONSource({data:s});t.setSource(l),t.setStyle({unit:e.style.unit,dash:[4e4,0,4e4,0],lineWidth:e.style.lineWidth,height:function(c,i){return i.distance/3+e.style.height},smoothSteps:30,speed:function(c,i){return 1e5+Math.random()*e.style.speed},flowLength:e.style.flowLength,lineColors:e.style.lineColors,maxHeightScale:e.style.maxHeightScale,headColor:e.style.headColor,trailColor:e.style.trailColor}),n.value.on("click",c=>{const i=t.queryFeature(c.pixel.toArray());i&&(g("amap3d-scene-pulseLinkLayer",i),y.SHJParseEvent.parseEvents(r.useEvents,"amap3d-scene-pulseLinkLayer",i))}),d.value.add(t),d.value.animate.start()},v=(a,e)=>{const s={type:"FeatureCollection",features:[]};return a.forEach((t,l)=>{const c={type:"Feature",id:Y.nanoid(),properties:{type:e==="Point"?e:0,...t},geometry:{type:e,coordinates:t.value}};s.features.push(c)}),s},Z=a=>{n.value.setFeatures(a.config.features),n.value.setPitch(a.config.pitch),n.value.setRotation(a.config.rotation),n.value.setStatus({dragEnable:a.config.dragEnable,zoomEnable:a.config.zoomEnable,rotateEnable:a.config.rotateEnable,pitchEnable:a.config.pitchEnable}),a.config.plugin.scale.visible?k.value.show():k.value.hide(),a.config.plugin.toolBar.visible?b.value.show():b.value.hide(),a.config.plugin.controlBar.visible?p.value.show():p.value.hide()},R=()=>{n.value.clearMap(),d.value.clear(),C(u.value)},j=a=>{n.value.setMapStyle(a.config.mapStyle)},V=a=>{n.value.setZoom(a.config.zoom,!1,200)},U=a=>{n.value.setCenter(a.config.center,!1,200)},O=()=>{n.value&&(n.value.clearMap(),n.value.destroy(),n.value=null,d.value&&(d.value.clear(),d.value.destroy(),d.value=null))};return o.onMounted(()=>{setTimeout(()=>{x(r.basicOption)},0)}),o.onUnmounted(()=>O()),{initAMap3d:x,updateAMapStyle:j,updateAMapConfig:Z,updateAMapComponents:R,updateAMapZoom:V,updateAMapCenter:U,amap3d:n,loading:S,AMapPrototype:u}},{initAMap3d:f,updateAMapStyle:A,updateAMapConfig:z,updateAMapComponents:P,updateAMapZoom:B,updateAMapCenter:W,loading:J}=I();return o.watch(()=>r.basicOption.config,()=>{z(r.basicOption)},{deep:!0}),o.watch(()=>r.basicOption.config.zoom,()=>{B(r.basicOption)},{deep:!0}),o.watch(()=>r.basicOption.config.center,()=>{W(r.basicOption)},{deep:!0}),o.watch(()=>r.basicOption.config.floors,w.debounce(()=>{f(r.basicOption)},300),{deep:!0}),o.watch(()=>r.basicOption.config.skyColor,w.debounce(()=>{f(r.basicOption)},300),{deep:!0}),o.watch(()=>r.basicOption.widgets,()=>{P()},{deep:!0}),o.watch(()=>r.basicOption.config.mapStyle,()=>{A(r.basicOption)},{deep:!0}),o.watch(()=>r.basicOption.basic,()=>{f(r.basicOption)},{deep:!0}),o.watch(()=>r.sources,()=>{f(r.basicOption)},{deep:!0}),E({refresh:()=>f(r.basicOption),refreshView:()=>z(r.basicOption),refreshData:()=>f(r.basicOption)}),(n,d)=>(o.openBlock(),o.createElementBlock("div",{class:o.normalizeClass(["amap-3d-wrap",{show:o.unref(J)}])},se,2))}});exports.default=le;
