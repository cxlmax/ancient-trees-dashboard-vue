"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const n=require("vue"),v=require("hls.js"),d=require("lodash"),O=require("nanoid"),s=require("../../commons/plugins/event/index.js"),_=require("../../commons/plugins/datasource/index.js"),k=["poster","autoplay","controls","loop","muted"],q=n.defineComponent({name:"zv-media-m3u8-dynamic"}),w=n.defineComponent({...q,props:{basicOption:{},sources:{},useEvents:{},uuid:{}},emits:["on-video-progress","on-video-play","on-video-pause","on-video-ended","on-video-playing","on-video-timeupdate","on-video-error","on-video-volumechange"],setup(c,{expose:E,emit:y}){const e=c,f=()=>{const o=n.ref(),t=n.ref(""),M=n.ref(O.nanoid()),p=()=>{_.SHJDatasourceV2.parse({tId:e.uuid,sources:e.sources,callback:({data:l})=>{try{if(s.SHJParseEvent.parseEvents(e.useEvents,"dataListener",l),t.value=l[0].data[0].src,t.value)if(v.isSupported()){const u=new v;u.loadSource(t.value),u.attachMedia(o.value),u.on(v.Events.MANIFEST_PARSED,()=>{e.basicOption.autoplay&&o.value.play()})}else o.value.canPlayType("application/vnd.apple.mpegurl")&&(o.value.src=t.value)}catch{s.SHJParseEvent.parseEvents(e.useEvents,"dataListener",null)}}})};return n.onMounted(()=>p()),{key:M,videoRef:o,initM3u8Video:p}},{key:m,videoRef:i,initM3u8Video:r}=f();n.watch(()=>d.cloneDeep(e.basicOption),(o,t)=>{d.isEqual(o,t)||r()},{deep:!0}),n.watch(()=>d.cloneDeep(e.sources),(o,t)=>{d.isEqual(o,t)||r()},{deep:!0});const a=y,P=()=>{a("on-video-progress"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-progress")},g=()=>{a("on-video-play"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-play")},S=()=>{a("on-video-pause"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-pause")},h=()=>{a("on-video-ended"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-ended")},V=()=>{a("on-video-playing"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-playing")},H=()=>{a("on-video-timeupdate"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-timeupdate")},b=()=>{a("on-video-error"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-error")},J=()=>{a("on-video-volumechange"),s.SHJParseEvent.parseEvents(e.useEvents,"on-video-volumechange")};return E({play:()=>{i.value&&i.value.play()},pause:()=>{i.value&&i.value.pause()},refresh:()=>r(),refreshView:()=>r(),refreshData:()=>r()}),(o,t)=>(n.openBlock(),n.createElementBlock("video",{key:n.unref(m),ref_key:"videoRef",ref:i,class:"zerov-widget",poster:o.basicOption.poster,autoplay:o.basicOption.autoplay,controls:o.basicOption.controls,loop:o.basicOption.loop,muted:o.basicOption.muted,onProgress:P,onPlay:g,onEnded:h,onPlaying:V,onPause:S,onTimeupdate:H,onError:b,onVolumechange:J},null,40,k))}});exports.default=w;
