"use strict";var d=Object.defineProperty;var h=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var r=(s,e,t)=>h(s,typeof e!="symbol"?e+"":e,t);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const n=class n{constructor(){r(this,"connections",new Set)}static getInstance(){return n.instance||(n.instance=new n),n.instance}add(e,t){Array.from(this.connections).filter(o=>o.componentId===t).forEach(o=>{if(this.removeAllListeners(o.ws),o.ws.readyState!==WebSocket.CLOSED)try{o.ws.close(1e3,`Replacing connection for component ${t}`)}catch{}this.connections.delete(o)});const c={ws:e,componentId:t};this.connections.add(c),this.setupAutoRemove(e,c)}closeByComponentIds(e){const t=Array.isArray(e)?e:[e],i=new Set(t);Array.from(this.connections).filter(o=>i.has(o.componentId)&&o.ws.readyState!==WebSocket.CLOSED).forEach(o=>{this.removeAllListeners(o.ws);try{o.ws.close(1e3,`Component ${o.componentId} unmounted`)}catch{}this.connections.delete(o)})}removeAllListeners(e){const t=()=>{};e.onopen=t,e.onmessage=t,e.onerror=t,e.onclose=t,"removeAllListeners"in e&&e.removeAllListeners()}closeAll(){this.connections.forEach(e=>{if(e.ws.readyState===WebSocket.OPEN||e.ws.readyState===WebSocket.CONNECTING)try{e.ws.close(1e3,"All connections closed")}catch{}}),this.connections.clear()}setupAutoRemove(e,t){const i=e.close.bind(e);e.close=(c,o)=>{this.connections.delete(t),i(c,o)},e.onclose=()=>{this.connections.delete(t)}}getConnectionsInfo(){return Array.from(this.connections).map(e=>({componentId:e.componentId,readyState:e.ws.readyState}))}};r(n,"instance");let a=n;const m=a.getInstance();exports.wsManager=m;
